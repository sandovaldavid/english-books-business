---
import Button from '../Button.astro';
import SuccessMessage from './SuccessMessage.astro';
import ArrowRightIcon from '../icons/ArrowRight.astro';
import WarningIcon from '../icons/Warning.astro';

import '../../styles/contact/form.css';

// Define field types and structure
type HTMLInputTypeAttribute =
	| 'text'
	| 'email'
	| 'password'
	| 'tel'
	| 'number'
	| 'date'
	| 'time'
	| 'url'
	| 'search';

interface FormField {
	id: string;
	label: string;
	type: HTMLInputTypeAttribute | 'textarea';
	required: boolean;
	placeholder: string;
	errorMessage: string;
}

// Determine if reCAPTCHA should be enabled based on environment
const enableRecaptcha = import.meta.env.ENABLE_RECAPTCHA !== 'false';

// Configure form with environment variables
const contactForm = {
	// Use the PAGECLIP_KEY from environment variables
	action: `https://send.pageclip.co/${import.meta.env.PAGECLIP_KEY || process.env.PAGECLIP_KEY}/contact-form`,
	// Recaptcha configuration
	recaptcha: {
		enabled: enableRecaptcha,
		siteKey:
			import.meta.env.RECAPTCHA_SITE_KEY ||
			process.env.RECAPTCHA_SITE_KEY,
	},
	// Form field configuration
	fields: [
		{
			id: 'name',
			label: 'Nombre completo',
			type: 'text',
			required: true,
			placeholder: 'Ingresa tu nombre',
			errorMessage: 'Por favor ingresa tu nombre',
		},
		{
			id: 'email',
			label: 'Correo electrónico',
			type: 'email',
			required: true,
			placeholder: 'ejemplo@correo.com',
			errorMessage: 'Por favor ingresa un correo electrónico válido',
		},
		{
			id: 'subject',
			label: 'Asunto',
			type: 'text',
			required: true,
			placeholder: 'Asunto de tu mensaje',
			errorMessage: 'Por favor ingresa el asunto de tu mensaje',
		},
		{
			id: 'body',
			label: 'Mensaje',
			type: 'textarea',
			required: true,
			placeholder: 'Escribe tu mensaje aquí...',
			errorMessage: 'Por favor ingresa tu mensaje',
		},
	] as FormField[],
};
---

<section
	id='contact-form'
	class='form-section bg-white p-6 md:p-8 rounded-xl shadow-md hover:shadow-lg transition-all duration-300 my-4 md:my-8 lg:mx-10'>
	<h2 class='text-2xl font-bold text-primary-dark mb-6'>
		Envíanos un mensaje
	</h2>

	<!-- Hidden success message, shown after form submission -->
	<SuccessMessage id='success-message' class='hidden' />

	{
		contactForm.recaptcha.enabled === false && (
			<div class='bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6'>
				<div class='flex'>
					<div class='flex-shrink-0'>
						<WarningIcon class='h-5 w-5 text-yellow-400' />
					</div>
					<div class='ml-3'>
						<p class='text-sm text-yellow-700'>
							Modo desarrollo: reCAPTCHA desactivado
						</p>
					</div>
				</div>
			</div>
		)
	}

	<form
		id='contactForm'
		action={contactForm.action}
		method='post'
		class='pageclip-form space-y-6'>
		<!-- Form grid layout -->
		<div class='grid grid-cols-1 md:grid-cols-2 gap-6'>
			<!-- Name Field -->
			<div class='form-group'>
				<label
					for='name'
					class='block text-sm font-medium text-gray-700 mb-1'
					>{contactForm.fields[0].label}
					<span class='text-accent'>*</span></label
				>
				<div class='relative'>
					<input
						type='text'
						id='name'
						name='name'
						required
						class='form-input w-full py-2 px-4 border border-neutral rounded-lg focus:ring-2 focus:ring-primary-light focus:border-primary transition duration-200 placeholder-gray-400'
						placeholder={contactForm.fields[0].placeholder}
					/>
					<span class='form-validation-icon'></span>
				</div>
				<span class='error-message text-sm text-red-500 hidden'>
					{contactForm.fields[0].errorMessage}
				</span>
			</div>

			<!-- Email Field - IMPORTANT: must have name="email" for Pageclip reply-to field -->
			<div class='form-group'>
				<label
					for='email'
					class='block text-sm font-medium text-gray-700 mb-1'
					>{contactForm.fields[1].label}
					<span class='text-accent'>*</span></label
				>
				<div class='relative'>
					<input
						type='email'
						id='email'
						name='email'
						required
						class='form-input w-full py-2 px-4 border border-neutral rounded-lg focus:ring-2 focus:ring-primary-light focus:border-primary transition duration-200 placeholder-gray-400'
						placeholder={contactForm.fields[1].placeholder}
					/>
					<span class='form-validation-icon'></span>
				</div>
				<span class='error-message text-sm text-red-500 hidden'>
					{contactForm.fields[1].errorMessage}
				</span>
			</div>
		</div>

		<!-- Subject Field - IMPORTANT: must have name="subject" for Pageclip email subject -->
		<div class='form-group'>
			<label
				for='subject'
				class='block text-sm font-medium text-gray-700 mb-1'
				>{contactForm.fields[2].label}
				<span class='text-accent'>*</span></label
			>
			<div class='relative'>
				<input
					type='text'
					id='subject'
					name='subject'
					required
					class='form-input w-full py-2 px-4 border border-neutral rounded-lg focus:ring-2 focus:ring-primary-light focus:border-primary transition duration-200 placeholder-gray-400'
					placeholder={contactForm.fields[2].placeholder}
				/>
				<span class='form-validation-icon'></span>
			</div>
			<span class='error-message text-sm text-red-500 hidden'>
				{contactForm.fields[2].errorMessage}
			</span>
		</div>

		<!-- Message Field - IMPORTANT: must have name="body" for Pageclip email body -->
		<div class='form-group'>
			<label
				for='body'
				class='block text-sm font-medium text-gray-700 mb-1'
				>{contactForm.fields[3].label}
				<span class='text-accent'>*</span></label
			>
			<div class='relative'>
				<textarea
					id='body'
					name='body'
					rows='6'
					required
					class='form-textarea w-full py-2 px-4 border border-neutral rounded-lg focus:ring-2 focus:ring-primary-light focus:border-primary transition duration-200 placeholder-gray-400'
					placeholder={contactForm.fields[3].placeholder}></textarea>
				<span class='form-validation-icon'></span>
			</div>
			<span class='error-message text-sm text-red-500 hidden'>
				{contactForm.fields[3].errorMessage}
			</span>
		</div>

		<!-- reCAPTCHA -->
		{
			contactForm.recaptcha.enabled && (
				<div
					class='g-recaptcha'
					data-sitekey={contactForm.recaptcha.siteKey}
				/>
			)
		}

		<!-- Submit Button - IMPORTANT: must have class="pageclip-form__submit" -->
		<div class='flex justify-end'>
			<Button
				type='submit'
				variant='primary'
				size='large'
				class='group relative pageclip-form__submit shadow-md hover:shadow-lg transform transition-all duration-300 active:scale-95'>
				<span class='flex items-center'>
					<span class='mr-2'>Enviar mensaje</span>
					<ArrowRightIcon class='size-5' />
				</span>
			</Button>
		</div>
	</form>

	<div class='mt-6 text-center text-sm text-gray-500'>
		<p>
			Todos los campos marcados con <span class='text-accent'>*</span> son
			obligatorios
		</p>
	</div>
</section>

<!-- Add reCAPTCHA script -->
{
	contactForm.recaptcha.enabled && (
		<script src='https://www.google.com/recaptcha/api.js' async defer />
	)
}

<script define:vars={{ contactForm }}>
	document.addEventListener('DOMContentLoaded', () => {
		const form = document.getElementById('contactForm');
		const successMessage = document.getElementById('success-message');
		const formGroups = document.querySelectorAll('.form-group');
		const formConfig = contactForm;

		// Form validation function
		function validateField(input) {
			const formGroup = input.closest('.form-group');
			const errorMessage = formGroup.querySelector('.error-message');

			let isValid = true;

			if (input.hasAttribute('required') && !input.value.trim()) {
				isValid = false;
			} else if (input.type === 'email' && input.value.trim()) {
				const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
				isValid = emailPattern.test(input.value);
			}

			if (!isValid) {
				formGroup.classList.add('invalid');
				errorMessage.classList.remove('hidden');
			} else {
				formGroup.classList.remove('invalid');
				formGroup.classList.add('valid');
				errorMessage.classList.add('hidden');
			}

			return isValid;
		}

		// Validate all fields
		function validateForm() {
			const inputs = form.querySelectorAll(
				'input[required], textarea[required]'
			);
			let isFormValid = true;

			inputs.forEach((input) => {
				if (!validateField(input)) {
					isFormValid = false;
				}
			});

			// Check reCAPTCHA if enabled
			if (formConfig.recaptcha.enabled) {
				const recaptchaResponse = grecaptcha?.getResponse();
				if (!recaptchaResponse) {
					isFormValid = false;
					alert('Por favor, complete el captcha para continuar');
				}
			}

			return isFormValid;
		}

		// Add blur event listeners to validate fields when user leaves them
		formGroups.forEach((group) => {
			const input = group.querySelector('input, textarea');
			if (input) {
				input.addEventListener('blur', () => {
					if (input.hasAttribute('required') || input.value.trim()) {
						validateField(input);
					}
				});

				// Also validate on input to provide immediate feedback
				input.addEventListener('input', () => {
					if (group.classList.contains('invalid')) {
						validateField(input);
					}
				});
			}
		});
	});
</script>

---
import Button from './Button.astro';
import { PopularityTag } from '../types/book';
import type { Book } from '../types/book';
import { levelConfig, popularityConfig, formatConfig } from '../utils/bookTags';
import ArrowRightIcon from './icons/ArrowRight.astro';
import '../styles/Card.css';
import BookTags from './BookTags.astro';
import ReviewStars from './ReviewStars.astro';

interface Props {
	book: Book;
}

const { book } = Astro.props;

const {
	title,
	description,
	price,
	coverImage,
	altText = `${title} Book cover`,
	includedItems = [],
	rating,
	buyLink = '#',
	detailsLink = '#',
	discount = 0,
	level,
	featured = false,
	formatTags = [],
	popularityTags = [],
} = book;

// Truncate description if too long
const truncatedDescription =
	description.length > 70
		? `${description.substring(0, 70)}...`
		: description;

// Price calculations
const hasDiscount = discount > 0;
const discountedPrice = hasDiscount ? price * (1 - discount / 100) : price;
const formattedPrice = `S/${price.toFixed(2)}`;
const formattedDiscountedPrice = `S/${discountedPrice.toFixed(2)}`;

// Get level configuration
const levelDisplay = level
	? levelConfig[level as keyof typeof levelConfig]
	: null;

// Special status highlighting
const isSpecialOffer =
	hasDiscount ||
	(popularityTags && popularityTags.includes(PopularityTag.SPECIAL_OFFER));
const isFeaturedOrBestseller =
	featured ||
	(popularityTags && popularityTags.includes(PopularityTag.BESTSELLER));
---

<div
	class:list={[
		'book-card bg-white rounded-xl overflow-hidden w-full max-w-sm flex flex-col h-full transform transition-all duration-500 book-card-tilt',
		isFeaturedOrBestseller
			? 'card-highlighted shadow-xl hover:shadow-2xl hover:-translate-y-2'
			: 'shadow-md hover:shadow-xl hover:-translate-y-1',
		isSpecialOffer && 'special-offer-card',
	]}>
	<!-- Book Cover Image with Badge -->
	<div class='relative h-52 overflow-hidden book-cover-container'>
		<img
			src={coverImage}
			alt={altText}
			class='w-full h-full object-cover transition-transform duration-700 book-cover'
			loading='lazy'
		/>
		<div
			class='absolute inset-0 bg-gradient-to-b from-transparent to-black/70 opacity-0 group-hover:opacity-100 transition-opacity duration-300 cover-overlay'>
		</div>

		<!-- Featured & Level badges -->
		{
			featured && (
				<div class='absolute top-3 left-3 bg-secondary text-black font-bold py-1 px-3 rounded-full text-sm shadow-md animate-pulse-subtle'>
					Recomendado
				</div>
			)
		}

		{
			levelDisplay && (
				<div
					class={`absolute top-3 ${featured ? 'right-3' : 'left-3'} ${levelDisplay.color} font-medium py-1 px-3 rounded-full text-xs shadow-sm`}>
					{levelDisplay.label}
				</div>
			)
		}

		<!-- Discount badge -->
		{
			hasDiscount && (
				<div class='absolute -right-12 top-7 bg-accent text-white font-bold py-1 px-10 shadow-md transform rotate-45 discount-badge'>
					{discount}% OFF
				</div>
			)
		}
	</div>

	<!-- Book Details -->
	<div class='p-5 flex flex-col flex-grow card-content'>
		<!-- Title -->
		<h3
			class='text-xl font-bold text-gray-800 mb-2 line-clamp-2 book-title'>
			{title}
		</h3>

		<!-- Tags Section -->
		<BookTags
			formatTags={formatTags}
			popularityTags={popularityTags}
			formatConfig={formatConfig}
			popularityConfig={popularityConfig}
		/>

		<!-- Description -->
		<p class='text-gray-700 text-sm mb-4 line-clamp-2 book-description'>
			{truncatedDescription}
		</p>

		<!-- Price display -->
		<div class='mb-4 flex items-center price-display'>
			{
				hasDiscount ? (
					<>
						<span class='text-secondary-dark font-bold text-2xl discounted-price'>
							{formattedDiscountedPrice}
						</span>
						<span class='ml-2 text-sm text-gray-500 line-through original-price'>
							{formattedPrice}
						</span>
						<span class='ml-2 bg-accent/10 text-accent text-xs font-bold px-2 py-0.5 rounded-full discount-tag'>
							{discount}% OFF
						</span>
					</>
				) : (
					<span class='text-secondary-dark font-bold text-2xl normal-price'>
						{formattedPrice}
					</span>
				)
			}
		</div>

		<!-- Included items list -->
		<div class='mb-5 flex-grow included-content'>
			<p class='font-medium text-gray-700 mb-2'>Incluye:</p>
			<ul class='text-sm space-y-1.5 included-list'>
				{
					includedItems.map((item) => (
						<li class='flex items-start included-item'>
							<span class='text-accent mr-1.5 mt-0.5'>âœ“</span>{' '}
							{item}
						</li>
					))
				}
			</ul>
		</div>

		<!-- Rating stars -->
		{rating && <ReviewStars score={rating.score} className='mb-5' />}

		<!-- Action Buttons -->
		<div class='flex space-x-2 mt-auto action-buttons'>
			<Button
				variant='primary'
				size='small'
				href={buyLink}
				fullWidth={true}
				newTab={false}
				class='group shadow-md hover:shadow-lg buy-button'>
				<span>Comprar</span>
				<ArrowRightIcon class='w-6 h-6 ml' />
			</Button>
			<Button
				variant='outline'
				size='small'
				href={detailsLink}
				newTab={false}
				class='min-w-[120px] details-button'>
				Ver Detalles
			</Button>
		</div>
	</div>
</div>

<script>
	// Mobile click to expand functionality
	document.addEventListener('DOMContentLoaded', () => {
		document.querySelectorAll('.book-card').forEach((card) => {
			card.addEventListener('click', (e) => {
				if (window.innerWidth <= 768) {
					const target = e.target as Element;
					if (
						target &&
						!target.closest('a') &&
						!target.closest('button')
					) {
						card.classList.toggle('expanded');
					}
				}
			});
		});
	});
</script>

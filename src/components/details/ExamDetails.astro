---
import Button from '../Button.astro';
import ReviewStars from '../ReviewStars.astro';
import SectionTitle from '../SectionTitle.astro';
import MediaCarousel from '../MediaCarousel.astro';
import SocialShareButtons from '../SocialShareButtons.astro';
import ValuePropositionHighlight from './ValuePropositionHighlight.astro';
import ValueCard from './ValueCard.astro';
import type { Exam } from '../../types/exam';
import WhatsAppIcon from '../icons/WhatsApp.astro';
import CartIcon from '../icons/Cart.astro';
import CheckIcon from '../icons/Check.astro';
import ArrowRightIcon from '../icons/ArrowRight.astro';
import CustomerSupport from '../CustomerSupport.astro';
import { extractYoutubeId } from '../../utils/videoEmbeds';
import { levelConfig, formatConfig } from '../../utils/bookTags';
import '../../styles/ProductDetail.css';

// Define proper interface for MediaItem
interface MediaItem {
	type: 'image' | 'video';
	url: string;
	title?: string;
	thumbnail?: string;
}

interface Props {
	exam: Exam;
	relatedExams?: Exam[];
}

const { exam, relatedExams = [] } = Astro.props;

// Prepare pricing information
const hasDiscount = exam.discount && exam.discount > 0;
const originalPrice = exam.price;
const discountedPrice = hasDiscount
	? exam.price * (1 - (exam.discount || 0) / 100)
	: exam.price;

// Calculate savings amount if there's a discount
const savingsAmount = hasDiscount ? originalPrice - discountedPrice : 0;

// For exams that might have a retail/market value
const retailValue = exam.price * 1.3;
const hasRetailValue = retailValue > exam.price;

// Generate JSON-LD for SEO
const jsonLd = {
	'@context': 'https://schema.org',
	'@type': 'Product',
	name: exam.title,
	description: exam.description,
	image: exam.coverImage,
	offers: {
		'@type': 'Offer',
		price: discountedPrice,
		priceCurrency: 'PEN',
		availability: 'https://schema.org/InStock',
	},
	aggregateRating: exam.rating
		? {
				'@type': 'AggregateRating',
				ratingValue: exam.rating.score,
				reviewCount: exam.rating.reviewCount,
			}
		: undefined,
};

// Prepare media items for carousel
const mediaItems: MediaItem[] = [];

// Add images if available
if (exam.images && Array.isArray(exam.images)) {
	exam.images.forEach((img) => {
		mediaItems.push({
			type: 'image',
			url: img,
			title: `${exam.title} - Imagen`,
		});
	});
}

// Add the cover image if it's not already included
if (
	exam.coverImage &&
	(!exam.images || !exam.images.includes(exam.coverImage))
) {
	mediaItems.unshift({
		type: 'image',
		url: exam.coverImage,
		title: `${exam.title} - Portada`,
	});
}

// Add video if available
if (exam.video) {
	mediaItems.push({
		type: 'video',
		url: exam.video,
		title: `${exam.title} - Video`,
	});
}

// Get exam display metadata
const levelDisplay = exam.difficulty
	? levelConfig[exam.difficulty as keyof typeof levelConfig]
	: null;

// Get format tags
const formatTags = exam.formatTags || [];

// Prepare social share data
const currentUrl = Astro.url.href;
const shareTitle = exam.title;
const shareDescription =
	exam.description.substring(0, 100) +
	(exam.description.length > 100 ? '...' : '');
const shareImage = exam.coverImage;
---

<div class='product-detail-container'>
	<!-- JSON-LD Schema for SEO -->
	<script type='application/ld+json' set:html={JSON.stringify(jsonLd)} />

	<div class='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 md:py-12'>
		<!-- Breadcrumbs navigation -->
		<nav class='flex text-sm text-gray-500 mb-6' aria-label='Breadcrumb'>
			<ol class='inline-flex items-center space-x-1 md:space-x-3'>
				<li class='inline-flex items-center'>
					<a href='/' class='hover:text-primary transition-colors'>
						Inicio
					</a>
				</li>
				<li>
					<div class='flex items-center'>
						<span class='mx-2'>/</span>
						<a
							href='/examenes'
							class='hover:text-primary transition-colors'>
							Exámenes Internacionales
						</a>
					</div>
				</li>
				<li aria-current='page'>
					<div class='flex items-center'>
						<span class='mx-2'>/</span>
						<span
							class='text-gray-600 font-medium truncate max-w-[200px]'
							>{exam.title}</span
						>
					</div>
				</li>
			</ol>
		</nav>

		<!-- Product details grid -->
		<div class='grid grid-cols-1 lg:grid-cols-2 gap-8 md:gap-12'>
			<!-- Left column with media carousel -->
			<div class='flex flex-col'>
				{
					mediaItems.length > 0 ? (
						<MediaCarousel
							mediaItems={mediaItems}
							title={exam.title}
							height={exam.video ? '500px' : '450px'}
						/>
					) : (
						<div class='relative overflow-hidden rounded-2xl shadow-xl mb-6 product-cover-container group'>
							<img
								src={exam.coverImage}
								alt={exam.altText || `Portada de ${exam.title}`}
								class='w-full h-auto object-cover transition-transform duration-700 transform group-hover:scale-105'
							/>

							{hasDiscount && exam.discount && (
								<div class='absolute top-4 right-4 bg-accent text-white font-bold py-2 px-4 rounded-full shadow-md text-lg animate-pulse-slow'>
									{exam.discount}% OFF
								</div>
							)}

							{exam.featured && (
								<div class='absolute top-4 left-4 bg-secondary text-primary font-bold py-2 px-4 rounded-full shadow-md text-sm'>
									Recomendado
								</div>
							)}
						</div>
					)
				}

				<!-- Customer support widget -->
				<div class='mt-6'>
					<CustomerSupport />
				</div>
			</div>

			<!-- Right column with exam details -->
			<div class='flex flex-col'>
				<!-- Exam title and main details -->
				<div class='mb-6'>
					<h1
						class='text-3xl md:text-4xl font-bold text-primary-dark mb-4 product-title'>
						{exam.title}
					</h1>

					<!-- Level and format tags for exams -->
					<div class='flex flex-wrap gap-2 mb-4'>
						{
							levelDisplay && (
								<span
									class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium border ${levelDisplay.color}`}>
									{levelDisplay.label}
								</span>
							)
						}

						<span
							class='inline-flex items-center px-3 py-1 rounded-full text-sm font-medium border bg-blue-100 text-blue-800 border-blue-200'>
							Examen Internacional
						</span>

						{
							formatTags &&
								formatTags.map((tag) => (
									<span
										class={`inline-flex items-center px-3 py-1 rounded-full border text-sm font-medium ${formatConfig[tag as keyof typeof formatConfig]?.color || 'bg-gray-100 text-gray-800 border-gray-200'}`}>
										<span class='mr-1'>
											{formatConfig[
												tag as keyof typeof formatConfig
											]?.icon || ''}
										</span>
										{formatConfig[
											tag as keyof typeof formatConfig
										]?.label || tag}
									</span>
								))
						}
					</div>

					<!-- Rating and reviews with stars -->
					{
						exam.rating && (
							<div class='flex items-center mb-4'>
								<div class='flex text-yellow-400'>
									<ReviewStars score={exam.rating.score} />
								</div>
								<span class='ml-2 text-gray-600'>
									{exam.rating.score}/5 (
									{exam.rating.reviewCount} reseñas)
								</span>
							</div>
						)
					}

					<!-- Exam description -->
					<div class='prose prose-lg max-w-none text-gray-700 mb-6'>
						<p>{exam.description}</p>
					</div>

					<!-- Value proposition highlight for exams with retail value -->
					{
						hasRetailValue && (
							<ValuePropositionHighlight
								totalBooksValue={retailValue}
								originalPrice={originalPrice}
								discountedPrice={
									hasDiscount ? discountedPrice : undefined
								}
								discount={exam.discount}
							/>
						)
					}

					<!-- Price section using ValueCard component -->
					<ValueCard
						originalPrice={originalPrice}
						discountedPrice={hasDiscount
							? discountedPrice
							: undefined}
						discount={exam.discount}
						savingsAmount={hasDiscount ? savingsAmount : undefined}
						productType='exam'
					/>

					<!-- Call to action buttons -->
					<div class='flex flex-col sm:flex-row gap-4 mb-8'>
						<Button
							variant='primary'
							size='large'
							class='add-to-cart-btn flex-1 shadow-lg hover:shadow-xl transform transition-all duration-300 hover:-translate-y-1 group cursor-pointer'
							data-id={exam.id}
							data-title={exam.title}
							data-price={discountedPrice}
							data-image={exam.coverImage}
							data-type='exam'>
							<span class='flex items-center justify-center'>
								<CartIcon class='w-5 h-5 mr-2' />
								Agregar al carrito
							</span>
						</Button>

						<Button
							variant='accent'
							size='large'
							href='/checkout'
							class='view-cart-btn flex-1 shadow-lg hover:shadow-xl transform transition-all duration-300 hover:-translate-y-1 group'>
							<span class='flex items-center justify-center'>
								<WhatsAppIcon class='w-5 h-5 mr-2' />
								Ver carrito
							</span>
						</Button>
					</div>

					<!-- Exam contents/included items -->
					<div
						class='border border-gray-200 rounded-xl bg-white p-5 shadow-sm'>
						<h2
							class='text-xl font-bold text-primary-dark mb-4 flex items-center'>
							<span
								class='bg-primary text-white p-1 rounded-full mr-2'>
								<CheckIcon class='w-5 h-5' />
							</span>
							Contenido incluido
						</h2>

						<ul class='space-y-3 included-items-list'>
							{
								exam.includedItems &&
									exam.includedItems.map((item) => (
										<li class='flex items-start'>
											<span class='text-green-500 mr-2 mt-1'>
												✓
											</span>
											<span>{item}</span>
										</li>
									))
							}
						</ul>

						<div
							class='mt-5 bg-blue-50 rounded-lg p-4 border border-blue-100'>
							<p class='text-blue-800 text-sm'>
								<strong>Importante:</strong> Al realizar tu compra,
								recibirás acceso inmediato a todos los materiales
								a través de un enlace de descarga enviado a tu correo
								electrónico o WhatsApp.
							</p>
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- Social sharing buttons -->
		<SocialShareButtons
			url={currentUrl}
			title={shareTitle}
			description={shareDescription}
			image={shareImage}
			productType='exam'
			price={discountedPrice}
			currency='PEN'
		/>

		<!-- Related exams section -->
		{
			relatedExams.length > 0 && (
				<div class='mt-16 related-section'>
					<SectionTitle>
						Otros exámenes que podrían interesarte
					</SectionTitle>
					<div class='grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mt-8'>
						{relatedExams.map((relatedExam) => (
							<div class='bg-white rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 border border-gray-100'>
								<a
									href={`/examen/${relatedExam.id}`}
									class='block'>
									<div class='relative overflow-hidden product-image-container'>
										<img
											src={relatedExam.coverImage}
											alt={
												relatedExam.altText ||
												`Portada de ${relatedExam.title}`
											}
											class='w-full h-48 object-cover transform transition-transform duration-500 hover:scale-105'
										/>
										{relatedExam.discount &&
											relatedExam.discount > 0 && (
												<div class='absolute top-2 right-2 bg-accent text-white text-xs font-bold px-2 py-1 rounded-full'>
													{relatedExam.discount}% OFF
												</div>
											)}
									</div>
									<div class='p-4'>
										<h3 class='font-bold text-primary-dark text-lg mb-1 line-clamp-2'>
											{relatedExam.title}
										</h3>
										{relatedExam.difficulty &&
											levelConfig[
												relatedExam.difficulty as keyof typeof levelConfig
											] && (
												<div class='mb-2'>
													<span
														class={`text-xs px-2 py-1 rounded-full ${levelConfig[relatedExam.difficulty as keyof typeof levelConfig].color}`}>
														{
															levelConfig[
																relatedExam.difficulty as keyof typeof levelConfig
															].label
														}
													</span>
												</div>
											)}
										<div class='mb-2 flex justify-between items-center'>
											{relatedExam.discount &&
											relatedExam.discount > 0 ? (
												<div class='flex items-center'>
													<span class='font-bold text-primary text-lg'>
														S/
														{(
															relatedExam.price *
															(1 -
																relatedExam.discount /
																	100)
														).toFixed(2)}
													</span>
													<span class='text-gray-400 line-through text-sm ml-2'>
														S/
														{relatedExam.price.toFixed(
															2
														)}
													</span>
												</div>
											) : (
												<span class='font-bold text-primary text-lg'>
													S/
													{relatedExam.price.toFixed(
														2
													)}
												</span>
											)}
										</div>
									</div>
								</a>
							</div>
						))}
					</div>

					<div class='text-center mt-8'>
						<Button
							variant='outline'
							size='medium'
							href='/examenes'
							class='inline-flex items-center group'>
							Ver todos los exámenes
							<ArrowRightIcon class='ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform' />
						</Button>
					</div>
				</div>
			)
		}
	</div>
</div>

<script>
	import { CartManager } from '../../utils/cartManager';

	document.addEventListener('DOMContentLoaded', () => {
		const addToCartBtn = document.querySelector('.add-to-cart-btn');
		if (addToCartBtn) {
			addToCartBtn.addEventListener('click', () => {
				const productId = addToCartBtn.getAttribute('data-id');
				const productTitle = addToCartBtn.getAttribute('data-title');
				const productPriceStr = addToCartBtn.getAttribute('data-price');
				const productImage = addToCartBtn.getAttribute('data-image');
				const productType = addToCartBtn.getAttribute('data-type');

				if (
					productId &&
					productTitle &&
					productPriceStr &&
					productImage &&
					productType
				) {
					const productPrice = parseFloat(productPriceStr);

					CartManager.addItem({
						id: productId,
						title: productTitle,
						price: productPrice,
						image: productImage,
						type: productType as 'book' | 'exam' | 'pack',
					});

					CartManager.showNotification(
						`"${productTitle}" agregado al carrito`
					);
					window.dispatchEvent(new CustomEvent('cartUpdated'));
				}
			});
		}
	});
</script>

<style>
	.included-items-list li {
		animation: fadeInUp 0.5s ease forwards;
		opacity: 0;
	}

	.included-items-list li:nth-child(1) {
		animation-delay: 0.1s;
	}
	.included-items-list li:nth-child(2) {
		animation-delay: 0.2s;
	}
	.included-items-list li:nth-child(3) {
		animation-delay: 0.3s;
	}
	.included-items-list li:nth-child(4) {
		animation-delay: 0.4s;
	}
	.included-items-list li:nth-child(5) {
		animation-delay: 0.5s;
	}

	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(10px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
</style>

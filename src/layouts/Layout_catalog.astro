---
import Layout from './Layout.astro';
import SectionTitle from '../components/SectionTitle.astro';
import Breadcrumb from '../components/Breadcrumb.astro';
import PromoSection from '../components/catalog/PromoSection.astro';
import FAQ from '../components/FAQ.astro';
import CTABanner from '../components/CTA-Banner.astro';
import CategoryCards from '../components/catalog/CategoryCards.astro';
import ProductCard from '../components/ProductCard.astro';
import '../styles/catalog.css';
import Filter from '../components/catalog/Filter.jsx';
import SkeletonCatalog from '../components/SkeletonCatalog.astro';

// ==========================================
// Type Definitions
// ==========================================

/**
 * Breadcrumb item interface used for navigation
 */
interface BreadcrumbItem {
	label: string;
	url: string;
	active?: boolean;
}

/**
 * Layout_catalog props interface with organized sections
 */
export interface Props {
	// SEO properties
	/** Page title for SEO */
	title: string;
	/** Meta description for SEO */
	description: string;
	/** Canonical URL (defaults to current URL) */
	canonical?: string;
	/** Open Graph image path */
	ogImage?: string;
	/** Open Graph content type */
	ogType?: string;
	/** Twitter card type */
	twitterCard?: string;

	// Category info
	/** Main category title */
	categoryTitle: string;
	/** Category description text */
	categoryDescription: string;
	/** Hero section background image */
	categoryHeroImage?: string;
	/** Category icon (emoji or image path) */
	categoryIcon?: string;

	// Filter info
	/** Currently selected difficulty/level filter */
	currentLevel: string;
	/** Currently selected format filter */
	currentFormat: string;
	/** Currently selected sort option */
	currentSort: string;

	// Products/Items
	/** Array of product items to display */
	products: any[]; // Using any[] since products could be books, exams, etc.
	/** Mapping of editorial IDs to names */
	editorialMap?: Map<string, string>;

	// Navigation
	/** Breadcrumb navigation items */
	breadcrumbItems: BreadcrumbItem[];

	// Content customizations
	/** Whether to show related categories section */
	showRelatedCategories?: boolean;
	/** Whether to show promotional section */
	showPromoSection?: boolean;
	/** Whether to show FAQ section */
	showFAQ?: boolean;
	/** Whether to show CTA banner */
	showCTA?: boolean;
	/** Which FAQ dataset to use */
	faqDataset?: string;
	/** Title for promo section */
	promoTitle?: string;
	/** Subtitle for promo section */
	promoSubtitle?: string;
	/** CTA banner type */
	ctaType?: 'default' | 'newsletter' | 'consultation';

	// Display options
	/** Size of product cards */
	productSize?: 'small' | 'medium' | 'large';
	/** Number of grid columns */
	gridCols?: number;
	/** Type of products being displayed */
	productType?: string;
	/** Whether to show skeleton loader initially */
	showSkeletonOnLoad?: boolean;
}

// ==========================================
// Helper Functions
// ==========================================

/**
 * Maps a grid column count to responsive Tailwind classes
 */
function getGridClassFromColumns(cols: number): string {
	const gridClasses = {
		2: 'grid-cols-1 sm:grid-cols-2',
		3: 'grid-cols-2 sm:grid-cols-2 md:grid-cols-3',
		4: 'grid-cols-2 sm:grid-cols-3 md:grid-cols-4',
		5: 'grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5',
		6: 'grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6',
	};

	return (
		gridClasses[cols as keyof typeof gridClasses] ||
		'grid-cols-2 sm:grid-cols-3 md:grid-cols-4'
	);
}

/**
 * Converts filter values to human-readable display names
 */
function getFilterName(filterType: string, value: string): string {
	if (filterType === 'level' || filterType === 'difficulty') {
		const levelNames: Record<string, string> = {
			// Book levels
			basic: 'Nivel B치sico',
			intermediate: 'Nivel Intermedio',
			advanced: 'Nivel Avanzado',
			professional: 'Nivel Profesional',
			'all-levels': 'Multi-nivel',
			// CEFR levels
			a1: 'Nivel A1',
			a2: 'Nivel A2',
			b1: 'Nivel B1',
			b2: 'Nivel B2',
			c1: 'Nivel C1',
			c2: 'Nivel C2',
			// Exam difficulty levels
			beginner: 'Principiante',
		};
		return levelNames[value] || value;
	}

	if (filterType === 'format') {
		const formatNames: Record<string, string> = {
			pdf: 'PDF',
			workbook: 'Workbooks',
			audio: 'Material con Audio',
			video: 'Material con Video',
			software: 'Software',
			exams: 'Ex치menes de Pr치ctica',
			practice: 'Pr치cticas',
			certificate: 'Certificados',
			complete: 'Packs completos',
		};
		return formatNames[value] || value;
	}

	return value;
}

/**
 * Generate structured data for a product
 */
function generateProductStructuredData(
	product: any,
	index: number,
	productType: string
) {
	const baseProduct = {
		'@type': 'ListItem',
		position: index + 1,
		item: {
			'@type': 'Product',
			name: product.title,
			image: product.coverImage,
			description: product.description,
			url: product.detailsLink,
			offers: {
				'@type': 'Offer',
				price: product.discount
					? (product.price * (1 - product.discount / 100)).toFixed(2)
					: product.price.toFixed(2),
				priceCurrency: 'PEN',
				availability: 'https://schema.org/InStock',
			},
		},
	};

	// Adjust schema based on product type
	if (productType === 'book') {
		baseProduct.item['@type'] = 'Book';
	} else if (productType === 'exam') {
		baseProduct.item['@type'] = 'Product';
		baseProduct.item.additionalProperty = [
			{
				'@type': 'PropertyValue',
				name: 'examType',
				value: product.examType,
			},
			{
				'@type': 'PropertyValue',
				name: 'difficulty',
				value: product.difficulty,
			},
		];
	} else if (productType === 'pack') {
		baseProduct.item['@type'] = 'Product';
		baseProduct.item.additionalProperty = {
			'@type': 'PropertyValue',
			name: 'includedItems',
			value: product.includedItems.join(', '),
		};
	}

	return baseProduct;
}

// ==========================================
// Prop Defaults & Setup
// ==========================================

const {
	// SEO defaults
	title,
	description,
	canonical = Astro.url.href,
	ogImage = '/images/og-catalog-default.jpg',
	ogType = 'website',
	twitterCard = 'summary_large_image',

	// Category info
	categoryTitle,
	categoryDescription,
	categoryHeroImage = '/images/catalog-hero-default.jpg',
	categoryIcon = '游닄',

	// Filter defaults
	currentLevel = 'all',
	currentFormat = 'all',
	currentSort = 'featured',

	// Products
	products = [],
	editorialMap = new Map(),

	// Navigation
	breadcrumbItems = [{ label: 'Inicio', url: '/' }],

	// Content customization defaults
	showRelatedCategories = true,
	showPromoSection = true,
	showFAQ = true,
	showCTA = true,
	faqDataset = 'catalog',
	promoTitle = 'Ofertas y Promociones Exclusivas',
	promoSubtitle = 'Ofertas Especiales',
	ctaType = 'default',

	// Display options
	productSize = 'medium',
	gridCols = 4,
	productType = 'book',
	showSkeletonOnLoad = false,
} = Astro.props;

// ==========================================
// Data Processing
// ==========================================

/**
 * Build dynamic grid class based on gridCols prop
 */
const gridClass = getGridClassFromColumns(gridCols);

// Calculate unique categories for related categories
const categories = (await import('../database/categories.json')).default;
const filteredCategories = categories.slice(0, 4);

// Generate structured data for SEO
const structuredData = {
	'@context': 'https://schema.org',
	'@type': 'ItemList',
	itemListElement: products.map((product, index) =>
		generateProductStructuredData(product, index, productType)
	),
};

// Generate breadcrumb structured data
const breadcrumbStructuredData = {
	'@context': 'https://schema.org',
	'@type': 'BreadcrumbList',
	itemListElement: breadcrumbItems.map((item, index) => ({
		'@type': 'ListItem',
		position: index + 1,
		name: item.label,
		item: new URL(item.url, Astro.site).toString(),
	})),
};

// Determine hero section style based on image availability
const heroStyle = categoryHeroImage
	? `background-image: linear-gradient(to bottom, rgba(30, 58, 138, 0.8), rgba(30, 58, 138, 0.5)), url(${categoryHeroImage});`
	: '';

// Create absolute URLs for OG tags
const ogImageUrl = new URL(ogImage, Astro.site).toString();
---

<Layout title={title} description={description} canonicalURL={canonical}>
	<!-- Enhanced meta tags -->
	<link rel='canonical' href={canonical} slot='head' />
	<meta property='og:title' content={title} slot='head' />
	<meta property='og:description' content={description} slot='head' />
	<meta property='og:image' content={ogImageUrl} slot='head' />
	<meta property='og:url' content={canonical} slot='head' />
	<meta property='og:type' content={ogType} slot='head' />
	<meta name='twitter:card' content={twitterCard} slot='head' />
	<meta name='twitter:title' content={title} slot='head' />
	<meta name='twitter:description' content={description} slot='head' />
	<meta name='twitter:image' content={ogImageUrl} slot='head' />

	<!-- Structured Data -->
	<script
		type='application/ld+json'
		set:html={JSON.stringify(structuredData)}
		slot='head'
	/>
	<script
		type='application/ld+json'
		set:html={JSON.stringify(breadcrumbStructuredData)}
		slot='head'
	/>

	<!-- Hero Banner Section -->
	<section
		class='catalog-hero py-12 bg-primary bg-cover bg-center text-white relative overflow-hidden'
		style={heroStyle}>
		<div
			class='absolute inset-0 bg-gradient-to-r from-primary-dark/80 to-primary/40'>
		</div>
		<div class='container mx-auto px-8 relative z-10'>
			<div class='grid grid-cols-1 md:grid-cols-3 gap-8 h-full'>
				<!-- Text content -->
				<div class='md:col-span-2 text-center md:text-left'>
					<!-- Breadcrumbs -->
					<Breadcrumb
						items={breadcrumbItems}
						class='mb-6 text-white/90'
					/>
					<div>
						<div
							class='inline-block mb-4 text-4xl p-4 bg-white/10 backdrop-blur-sm rounded-lg shadow-lg fade-in'>
							{categoryIcon}
						</div>
						<h1
							class='text-3xl md:text-4xl lg:text-5xl font-bold mb-4 slide-in-left'>
							{categoryTitle}
						</h1>
						<p
							class='text-lg md:text-xl text-white/90 max-w-2xl mb-6 slide-in-left delay-100'>
							{categoryDescription}
						</p>
						<div
							class='flex flex-wrap justify-center md:justify-start gap-4 slide-in-left delay-200'>
							<a
								href='#catalog-section'
								class='bg-secondary hover:bg-secondary-dark text-primary-dark font-bold py-3 px-6 rounded-lg transition-all duration-300 shadow-lg hover:shadow-xl'>
								Ver Cat치logo
							</a>
							<a
								href='#contact-form'
								class='bg-white/20 hover:bg-white/30 backdrop-blur-sm text-white font-semibold py-3 px-6 rounded-lg transition-all duration-300'>
								Consultar Disponibilidad
							</a>
						</div>
					</div>
				</div>

				<!-- Decorative element -->
				<div
					class='hidden md:flex items-center justify-center relative overflow-hidden rounded-lg shadow-2xl border-4 border-white/20 fade-in delay-300'>
					<div
						class='aspect-[3/4] bg-gradient-to-br from-primary/40 to-accent/30 backdrop-blur-sm flex items-center justify-center w-full h-full'>
						<img
							src='/images/book-sample/book-sample-01.jpg'
							alt=''
							class='object-cover w-full h-full'
						/>
					</div>
				</div>
			</div>
		</div>

		<!-- Decorative shapes -->
		<div
			class='absolute -bottom-8 left-0 right-0 h-16 bg-white'
			style='clip-path: polygon(0 0, 100% 100%, 100% 100%, 0% 100%);'>
		</div>
		<div
			class='absolute -bottom-8 left-0 right-0 h-16 bg-white/20 backdrop-blur-sm'
			style='clip-path: polygon(0 0, 100% 100%, 100% 100%, 0% 100%);'>
		</div>
	</section>

	<!-- Main Catalog Section -->
	<section class='py-12 relative catalog-section' id='catalog-section'>
		<div class='absolute inset-0 catalog-pattern opacity-[0.03]'></div>
		<div class='container mx-auto px-4 relative z-10'>
			<!-- Filter UI - Using React component as a dynamic island -->
			<Filter
				initialLevel={currentLevel}
				initialFormat={currentFormat}
				initialSort={currentSort}
				productCount={products.length}
				productType={productType}
				className='mb-8 shadow-lg'
				client:load
			/>

			<div
				id='products-container'
				data-is-loading={showSkeletonOnLoad.toString()}>
				<!-- Skeleton loading state -->
				{
					showSkeletonOnLoad && (
						<div id='skeleton-loader' class='skeleton-container'>
							<SkeletonCatalog count={gridCols * 2} />
						</div>
					)
				}

				<!-- Products Grid -->
				<div
					id='products-grid'
					class={`grid ${gridClass} gap-4 sm:gap-6 ${
						showSkeletonOnLoad ? 'opacity-0' : ''
					}`}>
					{
						products.length > 0 ? (
							products.map((product) => (
								<ProductCard
									product={{
										...product,
										productType,
									}}
									size={productSize}
									editorial={
										product.editorialId && editorialMap
											? editorialMap.get(
													product.editorialId
												)
											: undefined
									}
									className='catalog-product-card'
								/>
							))
						) : (
							<div class='col-span-full py-16 text-center bg-neutral-light/50 rounded-lg'>
								<div class='text-5xl mb-4'>游댌</div>
								<h3 class='text-xl font-semibold text-primary-dark mb-2'>
									No se encontraron productos
								</h3>
								<p class='text-gray-500 mb-6'>
									Lo sentimos, no hay productos que coincidan
									con los filtros seleccionados.
								</p>
								<a
									href={
										breadcrumbItems[
											breadcrumbItems.length - 1
										]?.url || '/'
									}
									class='bg-primary hover:bg-primary-dark text-white font-medium py-2 px-6 rounded-lg transition-all duration-300'>
									Ver todos los productos
								</a>
							</div>
						)
					}
				</div>

				<!-- Results Summary -->
				{
					products.length > 0 && (
						<div class='mt-6 p-4 bg-white rounded-lg shadow-sm text-center'>
							<p class='text-sm text-gray-600'>
								Mostrando{' '}
								<span class='font-semibold'>
									{products.length}
								</span>{' '}
								{products.length === 1
									? 'resultado'
									: 'resultados'}
								{currentLevel !== 'all' &&
									` de ${getFilterName('level', currentLevel)}`}
								{currentFormat !== 'all' &&
									` en formato ${getFilterName('format', currentFormat)}`}
							</p>
						</div>
					)
				}
			</div>
		</div>
	</section>

	<!-- Related Categories Section -->
	{
		showRelatedCategories && (
			<section class='py-12 bg-neutral-light'>
				<div class='container mx-auto px-4'>
					<div class='text-center mb-10'>
						<SectionTitle>Explora otras categor칤as</SectionTitle>
						<p class='text-gray-600 max-w-3xl mx-auto'>
							Descubre nuestra selecci칩n completa de materiales
							educativos en ingl칠s
						</p>
					</div>
					<CategoryCards categories={filteredCategories} />
				</div>
			</section>
		)
	}

	<!-- Promotional Section -->
	{
		showPromoSection && (
			<PromoSection
				title={promoTitle}
				subtitle={promoSubtitle}
				className='bg-gradient-to-br from-primary/5 to-accent/5 py-16'
				countdownDays={5}
				cardSize='large'
			/>
		)
	}

	<!-- FAQ Section -->
	{
		showFAQ && (
			<FAQ
				className='py-16'
				dataset='catalog'
				title={`Preguntas frecuentes sobre nuestros ${
					productType === 'book'
						? 'libros'
						: productType === 'exam'
							? 'ex치menes'
							: 'productos'
				}`}
				description={`Resolvemos tus dudas sobre nuestros materiales de ingl칠s.`}
			/>
		)
	}

	<!-- CTA Banner -->
	{
		showCTA && (
			<div class='container mx-auto px-4 mb-16'>
				<CTABanner type={ctaType} />
			</div>
		)
	}

	<slot />
</Layout>

<style>
	/* Hero Section Styles */
	.catalog-hero {
		background-position: center;
		background-size: cover;
		position: relative;
	}

	/* Background Pattern */
	.catalog-pattern {
		background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.2'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
	}

	/* Animation Classes */
	.slide-in-left {
		animation: slideInLeft 0.8s ease forwards;
		opacity: 0;
		transform: translateX(-20px);
	}

	.delay-100 {
		animation-delay: 0.1s;
	}

	.delay-200 {
		animation-delay: 0.2s;
	}

	.delay-300 {
		animation-delay: 0.3s;
	}

	.fade-in {
		animation: fadeIn 1s ease forwards;
		opacity: 0;
	}

	/* Product Card Animations */
	.catalog-product-card {
		transition: all 0.3s ease;
		opacity: 0;
		transform: translateY(20px);
		animation: fadeInUp 0.5s ease forwards;
	}

	/* Staggered Animation Delays */
	#products-grid .catalog-product-card:nth-child(1) {
		animation-delay: 0.1s;
	}
	#products-grid .catalog-product-card:nth-child(2) {
		animation-delay: 0.15s;
	}
	#products-grid .catalog-product-card:nth-child(3) {
		animation-delay: 0.2s;
	}
	#products-grid .catalog-product-card:nth-child(4) {
		animation-delay: 0.25s;
	}
	#products-grid .catalog-product-card:nth-child(5) {
		animation-delay: 0.3s;
	}
	#products-grid .catalog-product-card:nth-child(6) {
		animation-delay: 0.35s;
	}
	#products-grid .catalog-product-card:nth-child(7) {
		animation-delay: 0.4s;
	}
	#products-grid .catalog-product-card:nth-child(8) {
		animation-delay: 0.45s;
	}

	/* Animation Keyframes */
	@keyframes slideInLeft {
		from {
			opacity: 0;
			transform: translateX(-20px);
		}
		to {
			opacity: 1;
			transform: translateX(0);
		}
	}

	@keyframes fadeIn {
		from {
			opacity: 0;
		}
		to {
			opacity: 1;
		}
	}

	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(20px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	/* Skeleton Loader Styles */
	#skeleton-loader {
		transition: opacity 0.5s ease-out;
	}

	#products-grid.opacity-0 {
		position: absolute;
		visibility: hidden;
	}

	[data-is-loading='false'] #skeleton-loader {
		display: none;
	}
</style>

<script>
	// Initialize scroll behavior
	document.addEventListener('DOMContentLoaded', () => {
		// Handle loading state transition
		const productsContainer = document.getElementById('products-container');
		const skeletonLoader = document.getElementById('skeleton-loader');
		const productsGrid = document.getElementById('products-grid');

		if (
			productsContainer &&
			productsContainer.getAttribute('data-is-loading') === 'true'
		) {
			// Simulate loading delay for demonstration
			setTimeout(() => {
				if (skeletonLoader) skeletonLoader.style.opacity = '0';
				if (productsGrid) {
					productsGrid.classList.remove('opacity-0');
					productsGrid.style.position = 'static';
					productsGrid.style.visibility = 'visible';
				}
				productsContainer.setAttribute('data-is-loading', 'false');
			}, 1000);
		}

		// Smooth scroll to sections when clicking navigation links
		document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
			anchor.addEventListener(
				'click',
				function (this: HTMLAnchorElement, e: Event) {
					e.preventDefault();
					const targetId = this.getAttribute('href');
					if (targetId) {
						const targetElement =
							document.querySelector<HTMLElement>(targetId);
						if (targetElement) {
							targetElement.scrollIntoView({
								behavior: 'smooth',
								block: 'start',
							});
						}
					}
				}
			);
		});

		// Set up intersection observer for animations
		const observer = new IntersectionObserver(
			(entries) => {
				entries.forEach((entry) => {
					if (entry.isIntersecting) {
						entry.target.classList.add('in-view');
						observer.unobserve(entry.target);
					}
				});
			},
			{
				threshold: 0.1,
				rootMargin: '0px 0px -50px 0px',
			}
		);

		// Observe elements that should animate on scroll
		document
			.querySelectorAll('.fade-in-scroll, .slide-up-scroll')
			.forEach((el) => observer.observe(el));
	});
</script>
